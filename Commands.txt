******
react-native-elements
->it is the pre-built set of common components. for that 
npm install react-native-elements --legacy-peer-deps



//after creating track-server folder.
npm init -y
//generates json file in track-server folder.

//install all the dependencies at once.
npm install bcrypt express jsonwebtoken mongoose nodemon

//write some bare minimum code to get express running
node src/index.js
//should show 'Listening on port 3000'

//setup the mongodb at
cloud.mongodb.com
//free hosted mongoDB instance
after setting up the server.
automate it.
//add a instance in script part of the package.json
"dev":"nodemon src/index.js"
//after this once run the npm run dev , then the server gets started immediately.

//now let's make some signup process possible.
//to test some route handlers. we need to install a tool called postman.
//navigate to getpostman.com and download it.

//json web token is used. to verify whether the user is who they say they are.
//navigate to jwt.io


//to set up the react app environment.
npx create-expo-app app_name
//it'll download the necessary dependencies.
Required React Navigation Installation Update
1. React Navigation v4 Installation
note: You cannot mix Yarn and npm in the same project as it will break your dependencies. You must consistently use the same package manager. If you have yarn installed on your computer it will be used by default to generate the project. In this case, you must use Yarn to install your dependencies.

1. Install React Navigation

npm install react-navigation --legacy-peer-deps

or

yarn add react-navigation

2. Install Dependencies

npx expo install react-native-gesture-handler react-native-reanimated react-native-screens react-native-safe-area-context @react-native-community/masked-view

3. Install React Navigation Stack

npm install react-navigation-stack @react-native-community/masked-view --legacy-peer-deps

or

yarn add react-navigation-stack @react-native-community/masked-view

4. Install React Navigation Tabs

npm install react-navigation-tabs --legacy-peer-deps

or

yarn add react-navigation-tabs

5. Find the babel.config.js file and add the following line to the return:

    plugins: ["react-native-reanimated/plugin"],

Updated babel.config.js:

module.exports = function (api) {
  api.cache(true);
  return {
    presets: ["babel-preset-expo"],
    plugins: ["react-native-reanimated/plugin"],
  };
};
2. Update Imports
Our imports in the upcoming lecture "Navigator Hookup" will now look like this:

import { createAppContainer, createSwitchNavigator } from 'react-navigation';
import { createStackNavigator } from 'react-navigation-stack';
import { createBottomTabNavigator } from 'react-navigation-tabs';
 
Errors?
If you are still struggling with the React Navigation installation then there are likely some major dependency conflicts in your environment. In this case, we've made a boilerplate available so that you can continue with the course. Download the zip file attached to this lecture to somewhere in your C:\Users directory (Windows) or /Users directory (macOS)

Then, run npm install --legacy-peer-deps and then npm start.

React Navigation v4 Docs:
https://reactnavigation.org/docs/4.x/getting-started



